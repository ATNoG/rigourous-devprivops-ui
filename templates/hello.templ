package templates

templ DemoPage() {
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title>Demo Page</title>
        <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet"/>
        <!-- GraphVis -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.js"></script>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.css" rel="stylesheet" />
        <style>
            body, html {
                height: 100%;
                margin: 0;
                padding: 0;
            }
            #editorContainer, #graphContainer {
                height: 100%;
                display: none; /* Initially hidden */
            }
            #mynetwork {
                width: 100%;
                height: 100%;
                border: 1px solid lightgray;
            }
            .navbar {
                background-color: #1a202c; /* Tailwind bg-gray-800 */
                color: white;
                padding: 1rem;
                display: flex;
            }
            .navbar a {
                margin-right: 1rem;
                cursor: pointer;
            }
            .navbar a:hover {
                text-decoration: underline;
            }
        </style>
    </head>
    <body class="h-full">
        <div class="navbar">
            <a id="toggleView" class="mr-4">Graph</a>
            <a href="#home" class="mr-4">Home</a>
            <a href="#about" class="mr-4">About</a>
            <a href="#contact">Contact</a>
        </div>

        <div class="flex h-full">
            <div class="w-48 bg-gray-100 p-4 overflow-y-auto">
                <h3 class="font-semibold mb-4">Sidebar Left</h3>
                <ul class="space-y-2">
                    <li>Item 1</li>
                    <li>Item 2</li>
                    <li>Item 3</li>
                    <li>Item 4</li>
                    <li>Item 5</li>
                </ul>
            </div>

            <div class="flex-grow p-4 bg-gray-50" id="editorContainer"></div>
            <div class="flex-grow p-4 bg-gray-50" id="graphContainer">
                <div id="mynetwork"></div>
            </div>

            <div class="w-48 bg-gray-100 p-4 overflow-y-auto">
                <h3 class="font-semibold mb-4">Sidebar Right</h3>
                <button class="w-full mb-2 bg-blue-500 text-white py-2 rounded" onclick="alert('Button 1 clicked!')">Button 1</button>
                <button class="w-full mb-2 bg-blue-500 text-white py-2 rounded" onclick="alert('Button 2 clicked!')">Button 2</button>
                <button class="w-full bg-blue-500 text-white py-2 rounded" onclick="alert('Button 3 clicked!')">Button 3</button>
            </div>
        </div>

        <!-- Load Monaco Editor -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"></script>
        <script>
            require.config({ paths: { 'vs': 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.33.0/min/vs' }});
            require(['vs/editor/editor.main'], function() {
                monaco.editor.create(document.getElementById('editorContainer'), {
                    value: [
                        'function x() {',
                        '\tconsole.log("Hello, world!");',
                        '}'
                    ].join('\n'),
                    language: 'javascript'
                });
            });
        </script>

        <!-- Load Graphviz-->
        <script>
            // Create a data set with nodes
            var nodes = new vis.DataSet([
                { id: 1, label: "Node 1" },
                { id: 2, label: "Node 2" },
                { id: 3, label: "Node 3" },
                { id: 4, label: "Node 4" },
                { id: 5, label: "Node 5" }
            ]);

            // Create a data set with edges
            var edges = new vis.DataSet([
                { from: 1, to: 2 },
                { from: 1, to: 3 },
                { from: 2, to: 4 },
                { from: 2, to: 5 }
            ]);

            // Create a network
            var container = document.getElementById('mynetwork');
            var data = {
                nodes: nodes,
                edges: edges
            };
            var options = {
                layout: {
                    improvedLayout: true
                },
                physics: {
                    enabled: true
                }
            };
            var network = new vis.Network(container, data, options);

            // Center the graph
            network.once('stabilizationIterationsDone', function () {
                network.fit({
                    animation: {
                        duration: 500,
                        easingFunction: 'easeInOutQuad'
                    }
                });
            });
        </script>

        <script>
            const toggleButton = document.getElementById('toggleView');
            let isEditorVisible = true;

            toggleButton.addEventListener('click', function() {
                if (isEditorVisible) {
                    document.getElementById('editorContainer').style.display = 'none';
                    document.getElementById('graphContainer').style.display = 'block';
                    network.redraw();
                    network.fit();
                    toggleButton.textContent = 'Editor';
                } else {
                    document.getElementById('editorContainer').style.display = 'block';
                    document.getElementById('graphContainer').style.display = 'none';
                    toggleButton.textContent = 'Graph';
                }
                isEditorVisible = !isEditorVisible;
            });

            // Show editor by default
            document.getElementById('editorContainer').style.display = 'block';
        </script>

        <script type="module">
            import init, { greet } from "/static/dfd/dfd.js";
            init().then(() => {
                console.log(greet("Hello world"));
                // greet();
            });
        </script>
    </body>
    </html>
}
